package Baekjoon;

import java.util.Scanner;

/*
 * 위의 그림과 같이 육각형으로 이루어진 벌집이 있다. 
 * 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 
 * 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 
 * 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.
 */

/**
 * 첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.
 * 입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.
 */

/**
 * 접근 방법 :
 * 1을 기준으로 숫자를 보면 6씩 늘어나는 것을 볼수 있다 
 * 1 (1) 1
 * 2 3 4 5 6 7 (1+6) 두번쨰 숫자는 방의 개수 2번 
 * 8 9 10 11 12 13 14 15 16 17 18 19 (1+6+6) 3번 
 * 20  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 37  (1+6+6+6+6) 4번
 * 즉 6의 배수인 계차수열 형태 따라서 
 * while 반복문으로 (현재위치가 도착지점을 넘어설때까지 반복)을 돌려서
 * number += cnt * 6
 * count +=1 구한다. 
 */
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int end = sc.nextInt(); // 도착지를 입력 
		int number = 1; // 현재 위치 
		int cnt = 1; // 카운트 
		
		while(number<end) { // 도착지 숫자보다 높으면 break
			number += cnt * 6;  // 현재위치 1 + 6 * cnt씩 증가한다
			cnt++;	
		}
		System.out.println(cnt); // 출력 
	}
}
